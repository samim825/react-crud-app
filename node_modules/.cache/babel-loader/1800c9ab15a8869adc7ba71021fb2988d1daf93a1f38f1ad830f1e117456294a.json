{"ast":null,"code":"var _jsxFileName = \"/home/samimhossain/Documents/UI/react-project/react-app/src/components/table/Table.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// const Table = ({ tableMetaData, personData }) => {\n//   const [sortColumn, setSortColumn] = useState(null);\n//   const [sortDirection, setSortDirection] = useState(\"asc\");\n//   const [filters, setFilters] = useState({\n//     name: \"\",\n//     age: \"\",\n//     occupation: \"\",\n//     gender: \"\",\n//     area: \"\",\n//   });\n\n//   const applyFilter = (data, filters) => {\n//     return data.filter((item) => {\n//       const nameMatch =\n//         !filters.name ||\n//         item.name.toLowerCase().includes(filters.name.toLowerCase());\n//       const ageMatch = !filters.age || item.age === parseInt(filters.age);\n//       const occupationMatch =\n//         !filters.occupation ||\n//         item.occupation\n//           .toLowerCase()\n//           .includes(filters.occupation.toLowerCase());\n//       const genderMatch =\n//         !filters.gender ||\n//         item.gender.toLowerCase() === filters.gender.toLowerCase();\n//       const areaMatch =\n//         !filters.area ||\n//         item.area.toLowerCase().includes(filters.area.toLowerCase());\n//       return (\n//         nameMatch && ageMatch && occupationMatch && genderMatch && areaMatch\n//       );\n//     });\n//   };\n\n//   //   const handleSort = (column) => {\n//   //     if (column === sortColumn) {\n//   //       setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n//   //     } else {\n//   //       setSortColumn(column);\n//   //       setSortDirection(\"asc\");\n//   //     }\n//   //   };\n\n//   const renderSortingIcon = (fieldName) => {\n//     if (fieldName === sortColumn) {\n//       return sortDirection === \"asc\" ? <>&#8648;</> : <>&#8650;</>;\n//     }\n//     return <>&#8648;</>;\n//   };\n\n//   const sortedPersonData = [...personData].sort((a, b) => {\n//     if (sortColumn === null) return 0; // No sorting\n//     const aValue = a[sortColumn];\n//     const bValue = b[sortColumn];\n//     if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\n//     if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\n//     return 0;\n//   });\n\n//   const handleSort = (column) => {\n//     const filteredData = applyFilter(personData, filters);\n//     const sortedData = [...filteredData].sort((a, b) => {\n//       if (column === null) return 0; // No sorting\n//       const aValue = a[column];\n//       const bValue = b[column];\n//       if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\n//       if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\n//       return 0;\n//     });\n//     setSortedPersonData(sortedData);\n//   };\n//   const handleFilterChange = (event) => {\n//     console.log(event.target);\n//     const { name, value } = event.target;\n//     setFilters({ ...filters, [name]: value });\n//     applyFilter(setFilters);\n//   };\n\n//   return (\n//     <div className=\"mt-2\">\n//       <input\n//         type=\"text\"\n//         name=\"name\"\n//         value={filters.name}\n//         onChange={handleFilterChange}\n//         placeholder=\"Filter by name\"\n//       />\n//       <input\n//         type=\"number\"\n//         name=\"age\"\n//         value={filters.age}\n//         onChange={handleFilterChange}\n//         placeholder=\"Filter by age\"\n//       />\n//       <table className=\"table table-bordered\">\n//         <thead className=\"table-secondary\">\n//           <tr>\n//             {tableMetaData.map((meta, i) => (\n//               <th\n//                 className=\"cursor-pointer\"\n//                 key={i}\n//                 onClick={() => meta.sortable && handleSort(meta.fieldName)}\n//               >\n//                 {meta.headerTitle}\n//                 {meta.sortable && (\n//                   <span className=\"sorting-icon\">\n//                     {renderSortingIcon(meta.fieldName)}\n//                   </span>\n//                 )}\n//               </th>\n//             ))}\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {sortedPersonData.map((rowData, index) => (\n//             <tr key={index}>\n//               {tableMetaData.map((meta, j) => (\n//                 <td key={j}>{meta.render(rowData)}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default Table;\n\nimport React, { useState } from \"react\";\nimport SearchFilters from \"../SearchFilters\";\nimport Input from \"../form/Input\";\nimport Select from \"../form/Select\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  tableMetaData,\n  personData\n}) => {\n  _s();\n  const [sortColumn, setSortColumn] = useState(null);\n  const [sortDirection, setSortDirection] = useState(\"asc\");\n  const [filters, setFilters] = useState({\n    name: \"\",\n    age: \"\",\n    occupation: \"\",\n    gender: \"\",\n    area: \"\"\n  });\n  const applyFilter = (data, filters) => {\n    return data.filter(item => {\n      const nameMatch = !filters.name || item.name.toLowerCase().includes(filters.name.toLowerCase());\n      const ageMatch = !filters.age || item.age === parseInt(filters.age);\n      const occupationMatch = !filters.occupation || item.occupation.toLowerCase().includes(filters.occupation.toLowerCase());\n      const genderMatch = !filters.gender || item.gender.toLowerCase() === filters.gender.toLowerCase();\n      const areaMatch = !filters.area || item.area.toLowerCase().includes(filters.area.toLowerCase());\n      return nameMatch && ageMatch && occupationMatch && genderMatch && areaMatch;\n    });\n  };\n  const [sortedPersonData, setSortedPersonData] = useState(personData);\n  const handleSort = column => {\n    const filteredData = applyFilter(personData, filters);\n    const sortedData = [...filteredData].sort((a, b) => {\n      if (column === null) return 0; // No sorting\n      const aValue = a[column];\n      const bValue = b[column];\n      if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\n      if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\n      return 0;\n    });\n    setSortedPersonData(sortedData);\n  };\n  const handleFilterChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFilters({\n      ...filters,\n      [name]: value\n    });\n  };\n  const renderSortingIcon = fieldName => {\n    if (fieldName === sortColumn) {\n      return sortDirection === \"asc\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\u21C8\"\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\u21CA\"\n      }, void 0, false);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"\\u21C8\"\n    }, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"bg-secondary p-3 text-white rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-3\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              fieldName: \"name\",\n              placeholder: \"Search by Name\",\n              value: filters.name,\n              onChange: handleFilterChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-3\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              fieldName: \"email\",\n              type: \"email\",\n              placeholder: \"Search by Email\",\n              value: filters.email,\n              onChange: handleFilterChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-3\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              fieldName: \"phonenumber\",\n              type: \"tel\",\n              placeholder: \"Search by Phone Number\"\n              // value={filters.phoneNumber}\n              ,\n              onChange: handleFilterChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-3\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              fieldName: \"gender\",\n              options: [{\n                label: \"Male\",\n                value: \"male\"\n              }, {\n                label: \"Female\",\n                value: \"female\"\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-3\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              fieldName: \"area\",\n              options: [{\n                value: \"Mirpur\",\n                label: \"Mirpur\"\n              }, {\n                value: \"Savar\",\n                label: \"Savar\"\n              }, {\n                value: \"Banani\",\n                label: \"Banani\"\n              }, {\n                value: \"Gulshan\",\n                label: \"Gulshan\"\n              }, {\n                value: \"Dhanmondi\",\n                label: \"Dhanmondi\"\n              }, {\n                value: \"MohakhaliDohs\",\n                label: \"Mohakhali DOHS\"\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-3\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              fieldName: \"occupation\",\n              options: [{\n                value: \"SoftwareEngineer\",\n                label: \"Software Enginner\"\n              }, {\n                value: \"Banker\",\n                label: \"Banker\"\n              }, {\n                value: \"Accountant\",\n                label: \"Accountant\"\n              }, {\n                value: \"Architect\",\n                label: \"Architect\"\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-3 padding-left-12 mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"reset\",\n              className: \"btn btn-block btn-warning w-100\",\n              children: \"Cancel Filter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-3 padding-left-12 mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-block btn-success w-100\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-calender-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this), \"Apply Filter\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-secondary\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: tableMetaData.map((meta, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"cursor-pointer\",\n            onClick: () => handleSort(meta.fieldName),\n            children: [meta.headerTitle, meta.sortable && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sorting-icon\",\n              children: renderSortingIcon(meta.fieldName)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: applyFilter(personData, filters).map((rowData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: tableMetaData.map((meta, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: meta.render(rowData)\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(Table, \"BubuKxqvubQ5Clz0GrrN/xJLnl4=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","SearchFilters","Input","Select","Fragment","_Fragment","jsxDEV","_jsxDEV","Table","tableMetaData","personData","_s","sortColumn","setSortColumn","sortDirection","setSortDirection","filters","setFilters","name","age","occupation","gender","area","applyFilter","data","filter","item","nameMatch","toLowerCase","includes","ageMatch","parseInt","occupationMatch","genderMatch","areaMatch","sortedPersonData","setSortedPersonData","handleSort","column","filteredData","sortedData","sort","a","b","aValue","bValue","handleFilterChange","event","value","target","renderSortingIcon","fieldName","children","className","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","email","options","label","map","meta","i","onClick","headerTitle","sortable","rowData","index","j","render","_c","$RefreshReg$"],"sources":["/home/samimhossain/Documents/UI/react-project/react-app/src/components/table/Table.js"],"sourcesContent":["// import React, { useState } from \"react\";\n\n// const Table = ({ tableMetaData, personData }) => {\n//   const [sortColumn, setSortColumn] = useState(null);\n//   const [sortDirection, setSortDirection] = useState(\"asc\");\n//   const [filters, setFilters] = useState({\n//     name: \"\",\n//     age: \"\",\n//     occupation: \"\",\n//     gender: \"\",\n//     area: \"\",\n//   });\n\n//   const applyFilter = (data, filters) => {\n//     return data.filter((item) => {\n//       const nameMatch =\n//         !filters.name ||\n//         item.name.toLowerCase().includes(filters.name.toLowerCase());\n//       const ageMatch = !filters.age || item.age === parseInt(filters.age);\n//       const occupationMatch =\n//         !filters.occupation ||\n//         item.occupation\n//           .toLowerCase()\n//           .includes(filters.occupation.toLowerCase());\n//       const genderMatch =\n//         !filters.gender ||\n//         item.gender.toLowerCase() === filters.gender.toLowerCase();\n//       const areaMatch =\n//         !filters.area ||\n//         item.area.toLowerCase().includes(filters.area.toLowerCase());\n//       return (\n//         nameMatch && ageMatch && occupationMatch && genderMatch && areaMatch\n//       );\n//     });\n//   };\n\n//   //   const handleSort = (column) => {\n//   //     if (column === sortColumn) {\n//   //       setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n//   //     } else {\n//   //       setSortColumn(column);\n//   //       setSortDirection(\"asc\");\n//   //     }\n//   //   };\n\n//   const renderSortingIcon = (fieldName) => {\n//     if (fieldName === sortColumn) {\n//       return sortDirection === \"asc\" ? <>&#8648;</> : <>&#8650;</>;\n//     }\n//     return <>&#8648;</>;\n//   };\n\n//   const sortedPersonData = [...personData].sort((a, b) => {\n//     if (sortColumn === null) return 0; // No sorting\n//     const aValue = a[sortColumn];\n//     const bValue = b[sortColumn];\n//     if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\n//     if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\n//     return 0;\n//   });\n\n//   const handleSort = (column) => {\n//     const filteredData = applyFilter(personData, filters);\n//     const sortedData = [...filteredData].sort((a, b) => {\n//       if (column === null) return 0; // No sorting\n//       const aValue = a[column];\n//       const bValue = b[column];\n//       if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\n//       if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\n//       return 0;\n//     });\n//     setSortedPersonData(sortedData);\n//   };\n//   const handleFilterChange = (event) => {\n//     console.log(event.target);\n//     const { name, value } = event.target;\n//     setFilters({ ...filters, [name]: value });\n//     applyFilter(setFilters);\n//   };\n\n//   return (\n//     <div className=\"mt-2\">\n//       <input\n//         type=\"text\"\n//         name=\"name\"\n//         value={filters.name}\n//         onChange={handleFilterChange}\n//         placeholder=\"Filter by name\"\n//       />\n//       <input\n//         type=\"number\"\n//         name=\"age\"\n//         value={filters.age}\n//         onChange={handleFilterChange}\n//         placeholder=\"Filter by age\"\n//       />\n//       <table className=\"table table-bordered\">\n//         <thead className=\"table-secondary\">\n//           <tr>\n//             {tableMetaData.map((meta, i) => (\n//               <th\n//                 className=\"cursor-pointer\"\n//                 key={i}\n//                 onClick={() => meta.sortable && handleSort(meta.fieldName)}\n//               >\n//                 {meta.headerTitle}\n//                 {meta.sortable && (\n//                   <span className=\"sorting-icon\">\n//                     {renderSortingIcon(meta.fieldName)}\n//                   </span>\n//                 )}\n//               </th>\n//             ))}\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {sortedPersonData.map((rowData, index) => (\n//             <tr key={index}>\n//               {tableMetaData.map((meta, j) => (\n//                 <td key={j}>{meta.render(rowData)}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default Table;\n\nimport React, { useState } from \"react\";\nimport SearchFilters from \"../SearchFilters\";\nimport Input from \"../form/Input\";\nimport Select from \"../form/Select\";\n\nconst Table = ({ tableMetaData, personData }) => {\n  const [sortColumn, setSortColumn] = useState(null);\n  const [sortDirection, setSortDirection] = useState(\"asc\");\n  const [filters, setFilters] = useState({\n    name: \"\",\n    age: \"\",\n    occupation: \"\",\n    gender: \"\",\n    area: \"\",\n  });\n\n  const applyFilter = (data, filters) => {\n    return data.filter((item) => {\n      const nameMatch =\n        !filters.name ||\n        item.name.toLowerCase().includes(filters.name.toLowerCase());\n      const ageMatch = !filters.age || item.age === parseInt(filters.age);\n      const occupationMatch =\n        !filters.occupation ||\n        item.occupation\n          .toLowerCase()\n          .includes(filters.occupation.toLowerCase());\n      const genderMatch =\n        !filters.gender ||\n        item.gender.toLowerCase() === filters.gender.toLowerCase();\n      const areaMatch =\n        !filters.area ||\n        item.area.toLowerCase().includes(filters.area.toLowerCase());\n      return (\n        nameMatch && ageMatch && occupationMatch && genderMatch && areaMatch\n      );\n    });\n  };\n\n  const [sortedPersonData, setSortedPersonData] = useState(personData);\n  const handleSort = (column) => {\n    const filteredData = applyFilter(personData, filters);\n    const sortedData = [...filteredData].sort((a, b) => {\n      if (column === null) return 0; // No sorting\n      const aValue = a[column];\n      const bValue = b[column];\n      if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\n      if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\n      return 0;\n    });\n    setSortedPersonData(sortedData);\n  };\n\n  const handleFilterChange = (event) => {\n    const { name, value } = event.target;\n    setFilters({ ...filters, [name]: value });\n  };\n\n  const renderSortingIcon = (fieldName) => {\n    if (fieldName === sortColumn) {\n      return sortDirection === \"asc\" ? <>&#8648;</> : <>&#8650;</>;\n    }\n    return <>&#8648;</>;\n  };\n\n  return (\n    <div className=\"mt-2\">\n      {/* Filter input elements */}\n      {/* <input\n        type=\"text\"\n        name=\"name\"\n        value={filters.name}\n        onChange={handleFilterChange}\n        placeholder=\"Filter by name\"\n      />\n      <input\n        type=\"number\"\n        name=\"age\"\n        value={filters.age}\n        onChange={handleFilterChange}\n        placeholder=\"Filter by age\"\n      /> */}\n      <div className=\"mt-5\">\n        <form className=\"bg-secondary p-3 text-white rounded\">\n          <div className=\"row\">\n            <div className=\"col-sm-3\">\n              <Input\n                fieldName=\"name\"\n                placeholder=\"Search by Name\"\n                value={filters.name}\n                onChange={handleFilterChange}\n              />\n            </div>\n            <div className=\"col-sm-3\">\n              <Input\n                fieldName=\"email\"\n                type=\"email\"\n                placeholder=\"Search by Email\"\n                value={filters.email}\n                onChange={handleFilterChange}\n              />\n            </div>\n            <div className=\"col-sm-3\">\n              <Input\n                fieldName=\"phonenumber\"\n                type=\"tel\"\n                placeholder=\"Search by Phone Number\"\n                // value={filters.phoneNumber}\n                onChange={handleFilterChange}\n              />\n            </div>\n            {/* <div className=\"col-sm-3\">\n            <Input\n              fieldName=\"age\"\n              label=\"Age\"\n              type=\"number\"\n              placeholder=\"Enter age\"\n              min=\"0\"\n              max=\"100\"\n            />\n          </div> */}\n            <div className=\"col-sm-3\">\n              <Select\n                fieldName=\"gender\"\n                options={[\n                  { label: \"Male\", value: \"male\" },\n                  { label: \"Female\", value: \"female\" },\n                ]}\n              />\n            </div>\n            {/* <div className=\"col-sm-3\">\n            <Input\n              fieldName=\"dateOfBirth\"\n              label=\"Date of Birth\"\n              type=\"date\"\n              placeholder=\"Enter date of birth\"\n            />\n          </div> */}\n          </div>\n          <div className=\"row mt-3\">\n            <div className=\"col-sm-3\">\n              <Select\n                fieldName=\"area\"\n                options={[\n                  { value: \"Mirpur\", label: \"Mirpur\" },\n                  { value: \"Savar\", label: \"Savar\" },\n                  { value: \"Banani\", label: \"Banani\" },\n                  { value: \"Gulshan\", label: \"Gulshan\" },\n                  { value: \"Dhanmondi\", label: \"Dhanmondi\" },\n                  { value: \"MohakhaliDohs\", label: \"Mohakhali DOHS\" },\n                ]}\n              />\n            </div>\n            <div className=\"col-sm-3\">\n              <Select\n                fieldName=\"occupation\"\n                options={[\n                  { value: \"SoftwareEngineer\", label: \"Software Enginner\" },\n                  { value: \"Banker\", label: \"Banker\" },\n                  { value: \"Accountant\", label: \"Accountant\" },\n                  { value: \"Architect\", label: \"Architect\" },\n                ]}\n              />\n            </div>\n            <div className=\"col-sm-3 padding-left-12 mt-4\">\n              <button type=\"reset\" className=\"btn btn-block btn-warning w-100\">\n                Cancel Filter\n              </button>\n            </div>\n            <div className=\"col-sm-3 padding-left-12 mt-4\">\n              <button type=\"submit\" className=\"btn btn-block btn-success w-100\">\n                <i className=\"bi bi-calender-2\"></i>Apply Filter\n              </button>\n            </div>\n          </div>\n          {/* <div className=\"row \">\n          <div className=\"d-flex justify-content-end\">\n            <div className=\"col-sm-3 padding-left-12\">\n              <button type=\"submit\" className=\"btn btn-block btn-success w-100\">\n                Apply Filter\n              </button>\n            </div>\n          </div>\n        </div> */}\n        </form>\n      </div>\n      {/* Add similar input elements for other optional fields */}\n\n      <table className=\"table\">\n        <thead className=\"table-secondary\">\n          <tr>\n            {tableMetaData.map((meta, i) => (\n              <th\n                className=\"cursor-pointer\"\n                key={i}\n                onClick={() => handleSort(meta.fieldName)}\n              >\n                {meta.headerTitle}\n                {meta.sortable && (\n                  <span className=\"sorting-icon\">\n                    {renderSortingIcon(meta.fieldName)}\n                  </span>\n                )}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {applyFilter(personData, filters).map((rowData, index) => (\n            <tr key={index}>\n              {tableMetaData.map((meta, j) => (\n                <td key={j}>{meta.render(rowData)}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}