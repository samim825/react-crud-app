{"ast":null,"code":"var _jsxFileName = \"/home/samimhossain/Documents/UI/react-project/react-app/src/components/table/Table.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  tableMetaData,\n  personData\n}) => {\n  _s();\n  const [sortColumn, setSortColumn] = useState(null);\n  const [sortDirection, setSortDirection] = useState(\"asc\");\n  const handleSort = column => {\n    if (column === sortColumn) {\n      setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setSortColumn(column);\n      setSortDirection(\"asc\");\n    }\n  };\n  const renderSortingIcon = fieldName => {\n    if (fieldName === sortColumn) {\n      return sortDirection === \"asc\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\u21C8\"\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\u21CA\"\n      }, void 0, false);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"\\u21C8\"\n    }, void 0, false);\n  };\n  const sortedPersonData = [...personData].sort((a, b) => {\n    if (sortColumn === null) return 0; // No sorting\n    const aValue = a[sortColumn];\n    const bValue = b[sortColumn];\n    if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\n    if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\n    return 0;\n  });\n  const applyFilter = (data, filters) => {\n    return data.filter(item => {\n      // Check each optional field against its corresponding filter value\n      const nameMatch = !filters.name || item.name.toLowerCase().includes(filters.name.toLowerCase());\n      const ageMatch = !filters.age || item.age === filters.age;\n      const occupationMatch = !filters.occupation || item.occupation.toLowerCase().includes(filters.occupation.toLowerCase());\n      const genderMatch = !filters.gender || item.gender.toLowerCase() === filters.gender.toLowerCase();\n      const areaMatch = !filters.area || item.area.toLowerCase().includes(filters.area.toLowerCase());\n\n      // Return true only if all conditions match\n      return nameMatch && ageMatch && occupationMatch && genderMatch && areaMatch;\n    });\n  };\n\n  // Inside your component, maintain a state for filters\n  const [filters, setFilters] = useState({\n    name: \"\",\n    age: \"\",\n    occupation: \"\",\n    gender: \"\",\n    area: \"\"\n  });\n\n  //   const handleSort = (column) => {\n  //     // First, apply filtering to the data based on the current filters\n  //     const filteredData = applyFilter(personData, filters);\n\n  //     // Sort the filtered data\n  //     const sortedData = [...filteredData].sort((a, b) => {\n  //       if (column === null) return 0; // No sorting\n  //       const aValue = a[column];\n  //       const bValue = b[column];\n  //       if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\n  //       if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\n  //       return 0;\n  //     });\n\n  //     // Update the state with sorted data\n  //     setSortedPersonData(sortedData);\n  //   };\n\n  const handleFilterChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFilters({\n      ...filters,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: filters.name,\n      onChange: handleFilterChange,\n      placeholder: \"Filter by name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"age\",\n      value: filters.age,\n      onChange: handleFilterChange,\n      placeholder: \"Filter by age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-secondary\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: tableMetaData.map((meta, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"cursor-pointer\",\n            onClick: () => meta.sortable && handleSort(meta.fieldName),\n            children: [meta.headerTitle, meta.sortable && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sorting-icon\",\n              children: renderSortingIcon(meta.fieldName)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortedPersonData.map((rowData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: tableMetaData.map((meta, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: meta.render(rowData)\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Table, \"17whzrKGRsuEzmHJqs6fmgdLMg4=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","Table","tableMetaData","personData","_s","sortColumn","setSortColumn","sortDirection","setSortDirection","handleSort","column","renderSortingIcon","fieldName","children","sortedPersonData","sort","a","b","aValue","bValue","applyFilter","data","filters","filter","item","nameMatch","name","toLowerCase","includes","ageMatch","age","occupationMatch","occupation","genderMatch","gender","areaMatch","area","setFilters","handleFilterChange","event","value","target","className","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","meta","i","onClick","sortable","headerTitle","rowData","index","j","render","_c","$RefreshReg$"],"sources":["/home/samimhossain/Documents/UI/react-project/react-app/src/components/table/Table.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Table = ({ tableMetaData, personData }) => {\n  const [sortColumn, setSortColumn] = useState(null);\n  const [sortDirection, setSortDirection] = useState(\"asc\");\n\n  const handleSort = (column) => {\n    if (column === sortColumn) {\n      setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setSortColumn(column);\n      setSortDirection(\"asc\");\n    }\n  };\n\n  const renderSortingIcon = (fieldName) => {\n    if (fieldName === sortColumn) {\n      return sortDirection === \"asc\" ? <>&#8648;</> : <>&#8650;</>;\n    }\n    return <>&#8648;</>;\n  };\n\n  const sortedPersonData = [...personData].sort((a, b) => {\n    if (sortColumn === null) return 0; // No sorting\n    const aValue = a[sortColumn];\n    const bValue = b[sortColumn];\n    if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\n    if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\n    return 0;\n  });\n\n  const applyFilter = (data, filters) => {\n    return data.filter((item) => {\n      // Check each optional field against its corresponding filter value\n      const nameMatch =\n        !filters.name ||\n        item.name.toLowerCase().includes(filters.name.toLowerCase());\n      const ageMatch = !filters.age || item.age === filters.age;\n      const occupationMatch =\n        !filters.occupation ||\n        item.occupation\n          .toLowerCase()\n          .includes(filters.occupation.toLowerCase());\n      const genderMatch =\n        !filters.gender ||\n        item.gender.toLowerCase() === filters.gender.toLowerCase();\n      const areaMatch =\n        !filters.area ||\n        item.area.toLowerCase().includes(filters.area.toLowerCase());\n\n      // Return true only if all conditions match\n      return (\n        nameMatch && ageMatch && occupationMatch && genderMatch && areaMatch\n      );\n    });\n  };\n\n  // Inside your component, maintain a state for filters\n  const [filters, setFilters] = useState({\n    name: \"\",\n    age: \"\",\n    occupation: \"\",\n    gender: \"\",\n    area: \"\",\n  });\n\n  //   const handleSort = (column) => {\n  //     // First, apply filtering to the data based on the current filters\n  //     const filteredData = applyFilter(personData, filters);\n\n  //     // Sort the filtered data\n  //     const sortedData = [...filteredData].sort((a, b) => {\n  //       if (column === null) return 0; // No sorting\n  //       const aValue = a[column];\n  //       const bValue = b[column];\n  //       if (aValue < bValue) return sortDirection === \"asc\" ? -1 : 1;\n  //       if (aValue > bValue) return sortDirection === \"asc\" ? 1 : -1;\n  //       return 0;\n  //     });\n\n  //     // Update the state with sorted data\n  //     setSortedPersonData(sortedData);\n  //   };\n\n  const handleFilterChange = (event) => {\n    const { name, value } = event.target;\n    setFilters({ ...filters, [name]: value });\n  };\n\n  return (\n    <div className=\"mt-2\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={filters.name}\n        onChange={handleFilterChange}\n        placeholder=\"Filter by name\"\n      />\n      <input\n        type=\"number\"\n        name=\"age\"\n        value={filters.age}\n        onChange={handleFilterChange}\n        placeholder=\"Filter by age\"\n      />\n      <table className=\"table table-bordered\">\n        <thead className=\"table-secondary\">\n          <tr>\n            {tableMetaData.map((meta, i) => (\n              <th\n                className=\"cursor-pointer\"\n                key={i}\n                onClick={() => meta.sortable && handleSort(meta.fieldName)}\n              >\n                {meta.headerTitle}\n                {meta.sortable && (\n                  <span className=\"sorting-icon\">\n                    {renderSortingIcon(meta.fieldName)}\n                  </span>\n                )}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {sortedPersonData.map((rowData, index) => (\n            <tr key={index}>\n              {tableMetaData.map((meta, j) => (\n                <td key={j}>{meta.render(rowData)}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}